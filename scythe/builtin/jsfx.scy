public external:
float spl0;
float spl1;
float spl2;
float spl3;
float spl4;
float spl5;
float spl6;
float spl7;
float spl8;
float spl9;
float spl10;
float spl11;
float spl12;
float spl13;
float spl14;
float spl15;
float spl16;
float spl17;
float spl18;
float spl19;
float spl20;
float spl21;
float spl22;
float spl23;
float spl24;
float spl25;
float spl26;
float spl27;
float spl28;
float spl29;
float spl30;
float spl31;
float spl32;
float spl33;
float spl34;
float spl35;
float spl36;
float spl37;
float spl38;
float spl39;
float spl40;
float spl41;
float spl42;
float spl43;
float spl44;
float spl45;
float spl46;
float spl47;
float spl48;
float spl49;
float spl50;
float spl51;
float spl52;
float spl53;
float spl54;
float spl55;
float spl56;
float spl57;
float spl58;
float spl59;
float spl60;
float spl61;
float spl62;
float spl63;

any reg00;
any reg01;
any reg02;
any reg03;
any reg04;
any reg05;
any reg06;
any reg07;
any reg08;
any reg09;
any reg10;
any reg11;
any reg12;
any reg13;
any reg14;
any reg15;
any reg16;
any reg17;
any reg18;
any reg19;
any reg20;
any reg21;
any reg22;
any reg23;
any reg24;
any reg25;
any reg26;
any reg27;
any reg28;
any reg29;
any reg30;
any reg31;
any reg32;
any reg33;
any reg34;
any reg35;
any reg36;
any reg37;
any reg38;
any reg39;
any reg40;
any reg41;
any reg42;
any reg43;
any reg44;
any reg45;
any reg46;
any reg47;
any reg48;
any reg49;
any reg50;
any reg51;
any reg52;
any reg53;
any reg54;
any reg55;
any reg56;
any reg57;
any reg58;
any reg59;
any reg60;
any reg61;
any reg62;
any reg63;
any reg64;
any reg65;
any reg66;
any reg67;
any reg68;
any reg69;
any reg70;
any reg71;
any reg72;
any reg73;
any reg74;
any reg75;
any reg76;
any reg77;
any reg78;
any reg79;
any reg80;
any reg81;
any reg82;
any reg83;
any reg84;
any reg85;
any reg86;
any reg87;
any reg88;
any reg89;
any reg90;
any reg91;
any reg92;
any reg93;
any reg94;
any reg95;
any reg96;
any reg97;
any reg98;
any reg99;

float spl(int channelindex) as spl;

int trigger as trigger;

int sample_rate as srate;
int num_channels as num_ch;
int samples_block as samplesblock;
float tempo as tempo;
int play_state as play_state;
float play_position as play_position;
float beat_position as beat_position;

int timesig_num as ts_num;
int timesig_denom as ts_denom;

bool ext_no_init as ext_noinit;
bool ext_no_denormal as ext_nodenorm;
int ext_tail_size as ext_tail_size;
float ext_gain_reduction_meter as ext_gr_meter;

int pdc_delay as pdc_delay;
int pdc_from_channel as pdc_bot_ch;
int pdc_to_channel as pdc_top_ch;
bool pdc_midi as pdc_midi;

void export_buffer_to_project(float* buffer, int length_samples, int nch, int srate, int track_index) as export_buffer_to_project;
void export_buffer_to_project(float* buffer, int length_samples, int nch, int srate, int track_index, int flags) as export_buffer_to_project;
void export_buffer_to_project(float* buffer, int length_samples, int nch, int srate, int track_index, int flags, float tempo) as export_buffer_to_project;
void export_buffer_to_project(float* buffer, int length_samples, int nch, int srate, int track_index, int flags, float tempo, int planar_pitch) as export_buffer_to_project;

int get_host_placement() as get_host_placement;
int get_host_placement(int chain_pos) as get_host_placement;
int get_host_placement(int chain_pos, int flags) as get_host_placement;
