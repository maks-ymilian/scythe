public external:
float sin(float angle) as sin;
float cos(float angle) as cos;
float tan(float angle) as tan;
float asin(float x) as asin;
float acos(float x) as acos;
float atan(float x) as atan;
float atan2(float x, float y) as atan2;
float sqr(float x) as sqr;
float sqrt(float x) as sqrt;
float pow(float x, float y) as pow;
float exp(float x) as exp;
float log(float x) as log;
float log10(float x) as log10;
float abs(float x) as abs;
float min(float x, float y) as min;
float max(float x, float y) as max;
int sign(float x) as sign;
float rand(float x) as rand;
int floor(float x) as floor;
int ceil(float x) as ceil;
float invsqrt(float x) as invsqrt;

void mdct(float* buf, int size) as mdct;
void imdct(float* buf, int size) as imdct;
void fft(float* buf, int size) as fft;
void ifft(float* buf, int size) as ifft;
void fft_real(float* buf, int size) as fft_real;
void ifft_real(float* buf, int size) as ifft_real;
void fft_permute(float* buf, int size) as fft_permute;
void fft_ipermute(float* buf, int size) as fft_ipermute;
void convolve_complex(float* dest, float* src, int size) as convolve_c;

internal:
float lerp(float a, float b, float t)
{
	return a + (b - a) * t;
}
