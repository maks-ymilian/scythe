public struct Vector
{
    float x;
    float y;
    float z;
}

public Vector newvec(float x, float y, float z)
{
    Vector v;
    v.x = x;
    v.y = y;
    v.z = z;
    return v;
}

public Vector publicVector = newvec(666, 777, 222);

struct Thing
{
    Vector v;
    float num;
}

Thing NewThing(float x, float y, float z, float num)
{
    Thing ret;
    ret.v.x = x;
    ret.v.y = y;
    ret.v.z = z;
    ret.num = num;
    return ret;
}

Thing CopyThing(Thing thing)
{
    return thing;
}

Thing CopyThing2(Thing thing1, Thing thing2 = NewThing(-1, -2, -3, -4))
{
	Thing out;
	out.v.x = thing1.v.x + thing2.v.x;
	out.v.y = thing1.v.y + thing2.v.y;
	out.v.z = thing1.v.z + thing2.v.z;
	out.num = thing1.num + thing2.num;
    return out;
}

@init
{

    bool boolean = 2 != 3;
    bool boolean3 = 1 > 5;
    bool boolean1 = false || true;

    if (1 == 4)
        1;
    else if ("" == "")
        2;

    int slider1 = 4.6;
    {
        int inside = 5;
        float b = slider1;
    }
    float b = slider1;

    int a = 1.4;
    float f = 5.4335;
    a = f * 3;
    f = a;
    string str = "";
    string st1 = "";
}
