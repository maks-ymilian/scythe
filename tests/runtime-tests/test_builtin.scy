external any AAA_test_builtin;

@init
{
	atomic.setifequal(0,0,0);
	atomic.exch(0,0);
	atomic.add(0,0);
	atomic.set(0,0);
	atomic.get(0);

	file.open(0);
	file.close(0);
	file.rewind(0);
	file.var(0,0);
	file.mem(0,0,0);
	file.str(0,0);
	file.avail(0);
	file.riff(0,0,0);
	file.text(0);

	gfx.set(0);
	gfx.set(0,0);
	gfx.set(0,0,0);
	gfx.set(0,0,0,0);
	gfx.set(0,0,0,0,0);
	gfx.set(0,0,0,0,0,0);
	gfx.set(0,0,0,0,0,0,0);

	gfx.lineto(0,0);
	gfx.lineto(0,0,false);

	gfx.line(0,0,0,0);
	gfx.line(0,0,0,0,false);

	gfx.rectto(0,0);
	gfx.rect(0,0,0,0);
	gfx.setpixel(0,0,0);
	gfx.getpixel(0,0,0);
	gfx.drawnumber(0,0);
	gfx.drawchar(0);

	gfx.drawstr(0);
	gfx.drawstr(0,0);
	gfx.drawstr(0,0,0);
	gfx.drawstr(0,0,0,0);

	gfx.measurestr(0,0,0);
	gfx.measurechar(0,0,0);

	gfx.setfont(0);
	gfx.setfont(0,0);
	gfx.setfont(0,0,0);
	gfx.setfont(0,0,0,0);

	gfx.getfont();
	gfx.printf(0);
	gfx.printf(0,0,0,0,0,0,0,0,0,0,0,);
	gfx.blurto(0,0);

	gfx.blit(0,0,0);
	gfx.blit(0,0,0,0);
	gfx.blit(0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0,0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0,0,0,0,0,0,0);
	gfx.blit(0,0,0,0,0,0,0,0,0,0,0,0,0);

	gfx.blitext(0,0,0);
	gfx.getimgdim(0,0,0);
	gfx.setimgdim(0,0,0);
	gfx.loadimg(0,0);

	gfx.gradrect(0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
	gfx.gradrect(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

	gfx.muladdrect(0,0,0,0,0,0,0);
	gfx.muladdrect(0,0,0,0,0,0,0,0);
	gfx.muladdrect(0,0,0,0,0,0,0,0,0);
	gfx.muladdrect(0,0,0,0,0,0,0,0,0,0);
	gfx.muladdrect(0,0,0,0,0,0,0,0,0,0,0);
	gfx.muladdrect(0,0,0,0,0,0,0,0,0,0,0,0);

	gfx.deltablit(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
	gfx.deltablit(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,false);

	gfx.transformblit(0,0,0,0,0,0,0,0);

	gfx.circle(0,0,0);
	gfx.circle(0,0,0,false);
	gfx.circle(0,0,0,false,false);

	gfx.roundrect(0,0,0,0,0);
	gfx.roundrect(0,0,0,0,0,false);

	gfx.arc(0,0,0,0,0);
	gfx.arc(0,0,0,0,0,false);

	gfx.triangle(0,0,0,0,0,0);
	gfx.triangle(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,);

	gfx.getchar();
	gfx.getchar(0);
	gfx.getchar(0,0);

	gfx.showmenu(0);

	gfx.setcursor(0);
	gfx.setcursor(0,0);

	jsfx.spl(0);

	jsfx.export_buffer_to_project(0,0,0,0,0);
	jsfx.export_buffer_to_project(0,0,0,0,0,0);
	jsfx.export_buffer_to_project(0,0,0,0,0,0,0);
	jsfx.export_buffer_to_project(0,0,0,0,0,0,0,0);

	jsfx.get_host_placement();
	jsfx.get_host_placement(0);
	jsfx.get_host_placement(0,0);

	math.sin(0);
	math.cos(0);
	math.tan(0);
	math.asin(0);
	math.acos(0);
	math.atan(0);
	math.atan2(0,0);
	math.sqr(0);
	math.sqrt(0);
	math.pow(0,0);
	math.exp(0);
	math.log(0);
	math.log10(0);
	math.abs(0);
	math.min(0,0);
	math.max(0,0);
	math.sign(0);
	math.rand(0);
	math.floor(0);
	math.ceil(0);
	math.invsqrt(0);
	math.mdct(0,0);
	math.imdct(0,0);
	math.fft(0,0);
	math.ifft(0,0);
	math.fft_real(0,0);
	math.ifft_real(0,0);
	math.fft_permute(0,0);
	math.fft_ipermute(0,0);
	math.convolve_c(0,0,0);

	mem.freembuf(0);
	mem.cpy(0,0,0);
	mem.set(0,0,0);
	mem.set_values(0,0);
	mem.set_values(0,0,0,0,0,0,0,0,0,0,0,);
	mem.get_values(0,0);
	mem.get_values(0,0,0,0,0,0,0,0,0,0,0,);
	mem.multiply_sum(0,0,0);
	mem.insert_shuffle(0,0,0);
	mem.top();

	midi.send(0,0,0);
	midi.send(0,0,0,0);
	midi.send_buf(0,0,0);
	midi.send_str(0,0);
	midi.recv(0,0,0);
	midi.recv(0,0,0,0);
	midi.recv_buf(0,0,0);
	midi.recv_str(0,0);

	pin_mapper.get_host_numchan();
	pin_mapper.set_host_numchan(0);
	pin_mapper.get_pin_mapping(0,0,0,0);
	pin_mapper.set_pin_mapping(0,0,0,0,0);
	pin_mapper.get_flags();
	pin_mapper.set_flags(0);

	slider.change(0);

	slider.automate(0);
	slider.automate(0,false);

	slider.show(0,0);

	slider.slider(0);
	slider.next_chg(0, 0);

	stack.push(0);
	stack.pop();
	stack.pop(0);
	stack.peek(0);
	stack.exch(0);

	str.len(0);

	str.cpy(0,0);
	str.ncpy(0,0,0);

	str.cat(0,0);
	str.ncat(0,0,0);

	str.cmp(0,0);
	str.ncmp(0,0,0);

	str.icmp(0,0);
	str.nicmp(0,0,0);

	str.cpy_from(0,0,0);
	str.cpy_substr(0,0,0,0);
	str.cpy_fromslider(0,0);

	str.getchar(0,0);
	str.getchar(0,0,0);
	str.setchar(0,0,0);
	str.setchar(0,0,0,0);

	str.sprintf(0,0);
	str.sprintf(0,0,0,0,0,0,0,0,0,0,0,0,);

	str.match(0,0);
	str.match(0,0,0,0,0,0,0,0,0,0,0,0,);
	str.matchi(0,0);
	str.matchi(0,0,0,0,0,0,0,0,0,0,0,0,);

	time.time();
	time.time(0);

	time.precise();
	time.precise(0);

	gfx.r;
	gfx.g;
	gfx.b;
	gfx.a;
	gfx.a2;

	gfx.w;
	gfx.h;
	gfx.x;
	gfx.y;

	gfx.mode;
	gfx.clear;
	gfx.dest;
	gfx.texth;

	gfx.ext_retina;
	gfx.ext_flags;

	gfx.mouse_x;
	gfx.mouse_y;
	gfx.mouse_wheel;
	gfx.mouse_hwheel;

	gfx.mouse_cap;

	jsfx.trigger;

	jsfx.srate;
	jsfx.num_ch;
	jsfx.samplesblock;
	jsfx.tempo;
	jsfx.play_state;
	jsfx.play_position;
	jsfx.beat_position;

	jsfx.ts_num;
	jsfx.ts_denom;

	jsfx.ext_noinit;
	jsfx.ext_nodenorm;
	jsfx.ext_tail_size;
	jsfx.ext_gr_meter;

	jsfx.pdc_delay;
	jsfx.pdc_bot_ch;
	jsfx.pdc_top_ch;
	jsfx.pdc_midi;

	midi.ext_midi_bus;
	midi.bus;

	gfx.getsyscol();

	gfx.getdropfile(0);
	gfx.getdropfile(0,0);

	str.insert(0,0,0);
	str.delsub(0,0,0);
	str.setlen(0,0);

	slider.slider(1) = 1;

	AAA_test_builtin = bool {
		int callCount = 0;
		int compound()
		{
			callCount++;
			return 1;
		}
		compound() + compound();
		if (callCount != 2)
			return false;

		float pos = 999;
		jsfx.get_host_placement(pos);
		return pos != 999;
	};
}
