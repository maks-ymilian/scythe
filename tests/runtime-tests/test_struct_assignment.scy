struct Level3
{
	int w;
}

struct Level2
{
	string z;
	Level3 l3;
}

struct Level1
{
	string x;
	int y;
	Level2 l2;
}

bool test_equality3(Level3 value1, Level3 value2)
{
	return value1.w == value2.w;
}

bool test_equality2(Level2 value1, Level2 value2)
{
	return
		value1.z == value2.z &&
		test_equality3(value1.l3, value2.l3);
}

bool test_equality1(Level1 value1, Level1 value2)
{
	return
		value1.x == value2.x &&
		value1.y == value2.y &&
		test_equality2(value1.l2, value2.l2);
}

@init
{
	Level1 value = Level1 {
		.x = "hiidfsj",
		.y = -352,
		.l2.z = "sdk;fdsksvn481th0g[vn'md",
		.l2.l3.w = 418439,
	};

	Level1 value1 = Level1 {
		.x = "dsjak",
		.y = 3469,
		.l2.z = "kah;g",
		.l2.l3.w = -45983,
	};

	Level1 value2 = Level1 {value};
	Level1 value3 = value1;
	value2.l2 = value3.l2;
	bool test1 =
		test_equality3(value2.l2.l3, value3.l2.l3) &&
		test_equality2(value2.l2, value3.l2) &&
		!test_equality1(value2, value3);

	Level1 value4 = value;
	Level1 value5 = value1;
	value4.l2.l3 = value5.l2.l3;
	bool test2 =
		test_equality3(value4.l2.l3, value5.l2.l3) &&
		!test_equality2(value4.l2, value5.l2) &&
		!test_equality1(value4, value5);

	bool AAA_test_struct_assignment = test1 && test2;
}
