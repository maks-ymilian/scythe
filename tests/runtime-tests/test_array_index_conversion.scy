struct Test
{
	int a;
	int b;
	int c;
}

bool Compare(Test a, Test b)
{
	return
		a.a == b.a &&
		a.b == b.b &&
		a.c == b.c;
}

external bool AAA_test_array_index_conversion;

@init
{
	float index = 69;
	Test example = Test {
		.a = 324,
		.b = 43,
		.c = 938,
	};

	Test[] array;
	array[index] = example;
	index += 0.4;
	AAA_test_array_index_conversion =
		// MemberExpansionPass.c:431
		Compare(example, array[index]) &&
		// MemberExpansionPass.c:355
		array[index].a == example.a &&
		array[index].b == example.b &&
		array[index].c == example.c;
}
